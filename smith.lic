# quiet
=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts
=end

custom_require.call(%w(common common-crafting common-money common-travel drinfomon))

class Smith
  include DRC
  include DRCC
  include DRCM
  include DRCT

  def initialize(args)
    material, item_name, *options = args

    @settings = get_settings(['crafting'])

    recipes = @settings.crafting_recipes.select { |recipe| recipe['type'] =~ /blacksmithing|weaponsmithing|armorsmithing/i }
    recipe = recipe_lookup(recipes, item_name)
    recipe['material'] = material
    recipe['temper'] = options.find { |x| x =~ /temper/i }
    recipe['hone'] = options.find { |x| x =~ /hone/i }
    recipe['balance'] = options.find { |x| x =~ /balance/i }
    recipe['buy'] = options.find { |x| x =~ /buy/i }
    recipe['stamp'] = options.find { |x| x =~ /stamp/i }
    do_work(recipe)
  end

  def check_oil
    if 'You can' == bput('inv search flask of oil', '^You can', 'Your .* is in')
      ensure_copper_on_hand(1000)
      walk_to 8776
      fput('order 6')
      fput('order 6')
      pause 1
      fput('stow oil')
    end
  end

  def do_work(recipe)
    walk_to 8776
    recipe['part'].each do |part|
      fput("buy #{part}")
      fput("stow #{part}")
    end
    check_oil
    find_anvil(8775)
    wait_for_script_to_complete('forge', ['stow', recipe['type'], recipe['chapter'], recipe['name'], recipe['material'], recipe['noun']])
    if recipe['stamp']
      fput("get my stamp")
      fput("mark my #{recipe['noun']} with my stamp")
      pause
      waitrt?
      fput("stow my stamp")
    end
    if recipe['temper']
      check_oil
      find_anvil(8775)
      fput("get my #{recipe['noun']}")
      wait_for_script_to_complete('forge', ['temper', recipe['noun']])
    end
    if recipe['hone']
      check_oil
      fput("get my #{recipe['noun']}")
      wait_for_script_to_complete('forge', ['hone', recipe['noun']])
    elsif recipe['balance']
      check_oil
      fput("get my #{recipe['noun']}")
      wait_for_script_to_complete('forge', ['balance', recipe['noun']])
    end
  end
end

Smith.new(variable.drop(1))
