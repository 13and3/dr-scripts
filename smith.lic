# quiet
=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts
=end

custom_require.call(%w(common common-crafting common-money common-travel drinfomon))

class Smith
  include DRC
  include DRCC
  include DRCM
  include DRCT

  def initialize(args)
    ensure_copper_on_hand(5000)

    material, item_name, *options = args

    settings = get_settings(['crafting'])

    discipline = settings['Blacksmithing']

    recipes = settings.crafting_recipes.select { |recipe| recipe['type'] =~ /blacksmithing|weaponsmithing|armorsmithing/i }
    recipe = recipe_lookup(recipes, item_name)
    recipe['material'] = material
    recipe['temper'] = options.find { |x| x =~ /temper/i }
    recipe['hone'] = options.find { |x| x =~ /hone/i }
    recipe['balance'] = options.find { |x| x =~ /balance/i }
    recipe['buy'] = options.find { |x| x =~ /buy/i }

    do_work(recipe, discipline, recipe['part'] || [])
  end

  def check_oil(discipline)
    if 'You can' == bput("inv search #{discipline['finisher-full']}", '^You can', 'Your .* is in')
      order_item(discipline['finisher-room'], discipline['finisher-number'])
      empty_hands
    end
  end

  def empty_hands
    pause 1
    bput('stow right', 'You put') if checkright
    bput('stow left', 'You put') if checkleft
  end

  def dispose(item, trash_room = nil)
    walk_to(trash_room) unless trash_room.nil?
    bput("get my #{item}", 'You get')
    dispose_trash(item.to_s)
  end

  def do_work(recipe, discipline, parts)
    parts.each do |part|
      walk_to(discipline['part-room'])
      fput("buy #{part}")
      bput("stow #{part}", 'You put')
    end

    order_item(discipline['stock-room'], discipline['stock-number'])
    empty_hands

    check_oil(discipline)
    find_anvil(discipline['stock-room'])
    wait_for_script_to_complete('forge', [recipe['type'], recipe['chapter'], recipe['name'], recipe['material'], recipe['noun']])

    if recipe['temper']
      check_oil(discipline)
      find_anvil(discipline['stock-room'])
      fput("get my #{recipe['noun']}")
      wait_for_script_to_complete('forge', ['temper', recipe['noun']])
    end

    if discipline['stock-volume'] > recipe['volume']
      dispose(discipline['stock-name'], discipline['trash-room'])
    end
  end
end

Smith.new(variable.drop(1))
