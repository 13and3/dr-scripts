=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

  Mines in defined mining areas.

  Download scripts 'mine' and 'danger' from the lich repo.
=end

custom_require(%w(common))

class MiningBuddy
  include DRC

  def main
    setup

    start_room = variable.drop(1).first
    start_index = start_room.nil? ? 0 : @rooms.index(start_room.to_i)
    if start_index.nil?
      echo '***UNABLE TO FIND START ROOM IN ROOM LIST***'
      start_index = 0
    end
    mine_rooms(start_index)

    loop do
      mine_rooms
    end
  end

  def setup
    settings = get_settings
    @rooms = settings.mining_buddy_rooms([])
    if @rooms.empty?
      echo '***UNABLE TO FIND THE ROOM LIST, CHECK YOUR SETTINGS***'
      stop_script 'mining-buddy'
    end
    @mine_every_room = settings.mining_buddy_mine_every_room(false)
    @vein_list = settings.mining_buddy_vein_list([])
  end

  def mine_rooms(start_index = 0)
    @rooms[start_index, @rooms.length].each do |room|
      wait_for_script_to_complete('safe-room') if checkbleeding
      wait_for_script_to_complete('crossing-repair') if mine?(room)
    end
  end

  def mine?(room)
    walk_to(room)
    return false unless checkpcs.nil?

    unless @mine_every_room
      bput('prospect', 'You see evidence', 'not suitable for mining')
      results = reget(20, 'can be mined here')
      waitrt?

      return false unless results
                          .each_with_object([]) { |line, array| array << line.match(/You are certain that (.*) can be mined here/)[1] }
                          .delete_if(&:nil?)
                          .map(&:downcase)
                          .any? { |vein| @vein_list.map(&:downcase).include?(vein) }
    end

    wait_for_script_to_complete('mine', %w(nograb shovel))
    fput('prospect careful')
    waitrt?
    wait_for_script_to_complete('mine', %w(nograb shovel))
    true
  end
end

MiningBuddy.new.main
