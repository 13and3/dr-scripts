
class DRYamlValidator
  def initialize
    arg_definitions = [[]]

    args = parse_args(arg_definitions, true)

    settings = get_settings(args.flex)

    setup_data

    assertions = DRYamlValidator.instance_methods.select { |x| x.to_s =~ /^assert_that_/ && DRYamlValidator.instance_method(x).arity == 1 }

    echo("Checking #{assertions.size} different potential errors")
    assertions.each { |symbol| send(symbol, settings) }
    echo('All done!')
  end

  def assert_that_weapon_training_has_skills(settings)
    if settings.weapon_training.empty?
      warn('You have no weapons configured in weapon_training: this will likely cause problems.')
    end
  end

  def assert_that_weapon_training_are_skills(settings)
    settings.weapon_training.keys.each do |skill_name|
      error("Invalid weapon_training: skill name '#{skill_name}'") unless @valid_weapon_skills.include?(skill_name)
    end
  end

  private

  def warn(message)
    echo("WARNING: #{message}")
  end

  def error(message)
    echo("ERROR: #{message}")
  end

  def setup_data
    @valid_weapon_skills = ['Offhand Weapon', 'Brawling', 'Crossbow', 'Slings', 'Polearms', 'Bow', 'Large Blunt',
                            'Twohanded Blunt', 'Heavy Thrown', 'Light Thrown', 'Staves', 'Small Blunt', 'Small Edged',
                            'Large Edged', 'Twohanded Edged']
  end
end

DRYamlValidator.new
