# quiet
=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

  A large set of helper functions for common actions related to summoning weapons.
=end

custom_require.call(%w(common drinfomon))

module DRCS
  def summon_weapon(moon = nil, element = nil, ingot = nil)
    if DRStats.moon_mage?
      unless moon
        echo "Couldn't find any moons to cast moonblade with"
        return
      end
      fput('get moon')
    elsif DRStats.warrior_mage?
      get_ingot(ingot, true)
      case DRC.bput("summon weapon #{element}", 'You lack the elemental charge', 'you draw out')
      when 'You lack the elemental charge'
        summon_admittance
        summon_weapon(moon, element)
      end
      stow_ingot(ingot)
    else
      echo "Unable to summon weapons as a #{DRStats.guild}"
    end
    pause 1
    waitrt?
    DRC.fix_standing
  end
  module_function :summon_weapon

  def get_ingot(ingot, swap)
    return unless ingot

    bput("get my #{ingot} ingot", 'You get')
    bput('swap', 'You move') if swap
  end
  module_function :get_ingot

  def stow_ingot(ingot)
    return unless ingot

    bput("stow my #{ingot} ingot", 'You put')
  end
  module_function :stow_ingot

  def break_summoned_weapon?(item)
    return true if item.nil?

    success = ['Focusing your will', 'disrupting its matrix']
    failure = ["You can't break"]

    result = DRC.bput("break #{item}", *(success + failure))

    success.include? result
  end
  module_function :break_summoned_weapon?

  def shape_summoned_weapon(skill, ingot = nil)
    if DRStats.moon_mage?
      skill_to_shape = { 'Staves' => 'blunt', 'Twohanded Edged' => 'huge', 'Large Edged' => 'heavy', 'Small Edged' => 'normal' }
      shape = skill_to_shape[skill]
      DRC.bput('get moon', 'already holding that', 'You grab')
      DRC.bput("shape #{checkright} to #{shape}", 'you adjust the magic that defines its shape', 'already has')
    elsif DRStats.warrior_mage?
      get_ingot(ingot, false)
      case DRC.bput("shape #{checkright} to #{skill}", 'You lack the elemental charge', 'You reach out')
      when 'You lack the elemental charge'
        summon_admittance
        shape_summoned_weapon(skill)
      end
      stow_ingot(ingot)
    else
      echo "Unable to shape weapons as a #{DRStats.guild}"
    end
    pause 1
    waitrt?
  end
  module_function :shape_summoned_weapon

  def moon_used_to_summon_weapon
    glance_to_moon = {
      'black' => 'katamba',
      'red-hot' => 'yavash',
      'blue-white' => 'xibar'
    }
    # 'glance moon' is a little misleading, but it will glance
    # at either a moonblade or moonstaff, never a moon
    glance = DRC.bput('glance moon', *(glance_to_moon.keys + ['could not find']))

    glance_to_moon[glance]
  end
  module_function :moon_used_to_summon_weapon

  def turn_summoned_weapon
    case DRC.bput("turn #{checkright}", 'You lack the resolve', 'You reach out')
    when 'You lack the resolve'
      summon_admittance
      turn_summoned_weapon
    end
    pause 1
    waitrt?
  end
  module_function :turn_summoned_weapon

  def push_summoned_weapon
    case DRC.bput("push #{checkright}", 'You lack the elemental charge', 'Closing your eyes', 'That\'s as')
    when 'You lack the elemental charge'
      summon_admittance
      push_summoned_weapon
    end
    pause 1
    waitrt?
  end
  module_function :push_summoned_weapon

  def pull_summoned_weapon
    case DRC.bput("pull #{checkright}", 'You lack the elemental charge', 'Closing your eyes', 'That\'s as')
    when 'You lack the elemental charge'
      summon_admittance
      pull_summoned_weapon
    end
    pause 1
    waitrt?
  end
  module_function :pull_summoned_weapon

  def summon_admittance
    case DRC.bput('summon admittance', 'You align yourself to it', 'further increasing your proximity', 'You are a bit too distracted')
    when 'You are a bit too distracted'
      retreat
      summon_admittance
    end
    pause 1
    waitrt?
    DRC.fix_standing
  end
  module_function :summon_admittance
end
