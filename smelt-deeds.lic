=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

  Combines deeds of like metals to save inventory space.
=end

custom_require(%w(common))

class SmeltDeeds
  include DRC

  def main
    case bput('inv search deed', 'You can\'t seem to find anything that looks like that', 'Your .* deed is in')
    when 'You can\'t seem to find anything that looks like that'
      return
    end

    results = reget(100, 'deed is in')
    waitrt?

    results
      .each_with_object([]) { |line, array| array << line.match(/Your (.*) deed is in/)[1] }
      .each_with_object(Hash.new(0)) { |name, counts| counts[name] += 1 }
      .delete_if { |metal, count| count <= 1 }
      .each { |metal, count| smelt(metal) }
  end

  def smelt(metal)
    empty_hands
    load_crucible(metal)

    wait_for_script_to_complete('smelt')
  end

  def load_crucible(metal)
    $ORDINALS.each do |ordinal|
      loop do
        case bput("get my #{ordinal} #{metal} deed", 'You get', 'What were you referring to')
        when 'What were you referring to'
          return
        end

        case bput('tap my deed', 'You pick up', 'The worker explains')
        when 'The worker explains'
          bput('stow my deed', 'You put')
          break
        end

        bput("put my #{checkright} in cruc", 'You put') unless checkright.nil?
        bput("put my #{checkleft} in cruc", 'You put') unless checkleft.nil?
      end
    end
  end
end

SmeltDeeds.new.main
