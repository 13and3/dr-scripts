=begin
    This script will train a pre-configured list of weapon skills, prioritizing whichever has the lowest amount of field experience.
    
    Required helper scripts: drmonitor, spellmonitor. These are automatically run if they are not already running.
    
    Require configuration: set UserVars.combat_trainer_setup to the name of your configuration file. An example can be seen at combat-trainer-setup.lic.
=end

# Ensure helper scripts are running and UserVars are configured
start_script UserVars.combat_trainer_setup
["drinfomon", "spellmonitor" ].each do |script_name|
    if !running?(script_name)
        start_script script_name
    end
end

# Cache the user var so we can modify it later if needed
@weapon_list = UserVars.weapon_training

def next_to_train
    @weapon_list.sort_by { |skill, weapon| DRSkill.getxp(skill).to_i }.first
end

def stow_weapons
    if checkleft != nil
        fput "stow left"
    end

    if checkright != nil
        fput "stow right"
    end
end

def check_buffs
    if DRSpells.prep_spell
        fput "cast" if DRSpells.prep_time <= 0
        return
    end
    
    UserVars.buffs.each {|name, data|
        if !DRSpells.active_spells[name] || (DRSpells.active_spells[name] <= data["recast"])
            fput "prepare #{data["abbrev"]} #{data["mana"]}"
            break
        end
    }
end

def arrange_skin(count)
    arranges = 0
    arrange_message = "arrange for skin"
    while arranges < count
        arranges += 1
        attempt = fput arrange_message, "You begin to arrange", "You continue arranging", "You make a mistake", "You complete arranging", "That creature cannot", "That has already been arranged", "Arrange what"
        break if attempt == "You complete arranging"
        break if attempt == "That has already been arranged"
        break if attempt == "Arrange what"
        if attempt == "That creature cannot"
            arranges = 0
            arrange_message = "arrange"
        end
        waitrt?
    end
end

# TODO: Rename to something more descriptive
def main_loop
    weapon_skill, weapon_name = next_to_train

    echo weapon_skill

    if weapon_name.empty?
        stow_weapons
    else
        if !checkright(weapon_name)
            stow_weapons
        end
        # TODO: Handle swappable weapons
        # You draw out your bastard sword from the backpack, gripping it firmly in your right hand and balancing with your left.
        # You draw out your bastard sword from the backpack, gripping it firmly in your right hand.
        fput "wield #{weapon_name}"

        if /Wield what?/.match(get)
            echo "***Could not find weapon #{weapon_name}; removing #{weapon_skill} from the training list***"
            @weapon_list.delete(weapon_skill)
            return
        end
    end

    target = [34, DRSkill.getxp(weapon_skill).to_i + 2].min
    counter = 0

    put "stance set #{UserVars.stances[weapon_skill]}"

    while DRSkill.getxp(weapon_skill).to_i < target
        break if counter >= 10
        break if DRRoom.dead_npcs.length > 0
        check_buffs()
        counter += 1
        fput "attack"
        waitrt?

        # https://elanthipedia.play.net/mediawiki/index.php/Combat_maneuvers
        while DRStats.fatigue < 90
            fput "bob" # or "feint"
            waitrt?
        end
    end

    if counter == 10
        echo "***Weapon appears to be learning slowly, consider removing it from the training list***"
    end

    if DRRoom.dead_npcs.length > 0 && UserVars.skinning["skin"]
        arrange_skin(UserVars.skinning["arrange_count"])

        fput "skin"

        fput "loot"
    end

    # TODO: Maintain berserks, forms, spells?
    # TODO: Train expertise, tactics, stealth, skinning?
    # TODO: Loot?
    # TODO: Handle closing to melee range
end

while true do
    main_loop
end