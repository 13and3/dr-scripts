# quiet
=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

  Automatic wound tender, on start checks heal for bleeding wounds and tends them, then watches for messages to unbind or retend wounds.

  To stop tending:
  ;k tendme
=end

custom_require(%w(common))

def bind_open_wounds?
  DRC.bput('heal', '^You')
  pause 1
  bleeders = reget(15)
             .reverse
             .take_while { |item| item !~ /^Bleeding/ }
             .keep_if { |item| item =~ /^\s+.+\s{7}\w+/ }
  bleeders = bleeders.keep_if { |item| !item.include?('tended') && !item.include?('inside') && !item.include?('Area') }
  return false if bleeders.empty?
  bleeders.each do |message|
    message =~ /^\s+(\w+|\w+\s\w+)\s{7}/
    DRC.bind_wound(Regexp.last_match(1))
  end
end

waitrt? while bind_open_wounds?

loop do
  case script.gets
  when /The bandages binding your (.*) come loose and you begin to bleed even more/
    DRC.bind_wound(Regexp.last_match(1))
    bind_open_wounds?
  when /The bandages binding your (.*) soak through with blood becoming useless and you begin bleeding again/
    DRC.bind_wound(Regexp.last_match(1))
    bind_open_wounds?
  when /You feel like now might be a good time to change the bandages on your (.*)\./
    next unless variable.include? 'train'
    DRC.unwrap_wound(Regexp.last_match(1))
    DRC.bind_wound(Regexp.last_match(1))
    bind_open_wounds?
  end
end
