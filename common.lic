=begin
    Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

    A large set of helper functions for common actions shared by many scripts
=end



def bput message, *matches
    timer = Time.now
    log = []
    matches.flatten!
    matches.map!{|item| /#{item}/i}
    clear
    put message
    while true && (Time.now - timer < 15)
        responses = clear
        responses.each do |response|
            if response =~ /(?:\.\.\.wait |Wait )([0-9]+)/
                pause $1.to_i
                put message
                break
            elsif response =~ /Sorry, you may only type ahead/
                pause 1
                put message
                break
            end
            matches.each do |match|
               return response.match(match) if response.match(match)
            end
        end
        pause 0.25
    end
    echo '*** No match was found after 15 seconds, dumping info'
    echo "messages seen: #{log}"
    echo "checked against #{matches}"
end

def remove_armor
    UserVars.armor.each do |piece|
        fput "remove #{piece}"
        fput "stow #{piece}"
        pause 0.25
    end
end

def wear_armor
    UserVars.armor.each do |piece|
        fput "get #{piece}"
        fput "wear #{piece}"
        pause 0.25
    end
end

def forage(item)
    if checkright.nil?
        while checkright.nil?
            fput "forage #{item}"
            waitrt?
        end
    elsif checkleft.nil?
        while checkleft.nil?
            fput "forage #{item}"
            waitrt?
        end
    else
        echo "Don't call forage without an empty hand!"
    end
end


def empty_hands
    while checkright != nil
        fput "stow right"
    end

    while checkleft != nil
        fput "stow left"
    end
end

def walk_to(room_num)
    return if room_num == Room.current.id
    fput "retreat" if DRRoom.npcs.count > 0
    fput "retreat" if DRRoom.npcs.count > 0

    start_script "go2", ["#{room_num}"]
    timer = Time.now
    while running?("go2")
        if (Time.now - timer) > 30
            kill_script "go2"
            timer = Time.now
            start_script "go2", ["#{room_num}"]
        end
        pause 0.5
    end

    #Consider just returning this boolean and letting callers decide what to do on a failed move.
    if room_num != Room.current.id
        echo "Failed to navigate to room #{room_num}, attempting again"
        walk_to room_num
    end
end

class Item
    @name
    @is_leather
    @is_worn

    def initialize(name:nil, leather:nil, worn:nil)
        @name = name
        @is_leather = leather
        @is_worn = worn
    end

    def is_leather?
        return @is_leather
    end

    def is_worn?
        return @is_worn
    end

    def name
        return @name
    end
end

