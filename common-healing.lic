# quiet
=begin
  Documentation: https://elanthipedia.play.net/mediawiki/index.php/Lich_script_development#common-healing
=end
custom_require.call(%w(common))
module DRCH
  module_function

  def check_health
    re_part = /(?<part>(?:left|right)?\s?(?:\w+))/
    severity_to_text = {
        1 => [
            /minor abrasions to the #{re_part}/,
            /a few nearly invisible scars along the #{re_part}/
        ],
        2 => [
            /some tiny scars (?:across|along) the #{re_part}/,
            /(?:light|tiny) scratches to the #{re_part}/
        ],
        3 => [
            /a bruised (head)/,
            /(?<skin>a small skin rash|loss of skin tone|some minor twitching|slight difficulty moving your fingers and toes)/,
            /cuts and bruises about the #{re_part}/,
            /minor scar\w+ (?:about|along|across) the #{re_part}/,
            /minor swelling and bruising (?:around|in) the #{re_part}/,
            /occasional twitch\w* (?:on|in) the #{re_part}/, #will match forehead which should be head
            /a black and blue #{re_part}/
        ],
        4 => [
            /a deeply bruised (head)/,
            /(?<skin>a large skin rash|minor skin discoloration|some severe twitching|slight numbness in your arms and legs)/,
            /deep cuts (?:about|across) the #{re_part}/,
            /severe scarring (?:across|along|about) the #{re_part}/,
            /a severely swollen and\s?(?:deeply)? bruised #{re_part}/,
            /(?:occasional|constant) twitch\w* (?:on|in) the #{re_part}/,
            /a bruised and swollen (?<part>(?:right|left) (?:eye))/
        ],
        5 => [
            /some deep slashes and cuts about the (?<part>head)/,
            /severe scarring and ugly gashes about the (?<part>head)/,
            /major swelling and bruising around the (?<part>head)/,
            /an occasional twitch on the fore(?<part>head)/,
            /a bruised, swollen and bleeding #{re_part}/,
            /deeply scarred gashes across the #{re_part}/,
            /a severely swollen, bruised and crossed #{re_part}/
        ]
    }
    vitality_line = ["Your body feels at full strength.\r"]
    DRC.bput('health', "You have")
    data = reget 300
    health_lines = data.reverse.take_while{ |line| !vitality_line.include?(line)}.reverse
    wounds_line = nil
    health_lines.each do |line|
      if line =~ /^You have/ && !(line =~ /^You have no significant injuries\./)
        wounds_line = line
      end
    end
    wounds = Hash.new {|h,k| h[k]=[]}
    part = nil
    wounds_line.split(',').each do |wound|
      severity_to_text.each do |severity_level, match_text|
        if wound =~ Regexp.union(match_text)
          part = Regexp.last_match(:part)
          wounds[severity_level] << part
        end
      end
    end
    wounds
  end

  def check_perc_health
    DRC.bput('perc heal self', 'Roundtime')
    data = reget 100
    data = data.reverse.take_while { |item| item != "Your injuries include...\r" }.reverse
    wounds = {}
    part = nil
    data.each do |line|
      if line =~ /Wounds to the (.+):/
        part = Regexp.last_match(1)
        wounds[part] = []
      end
      wounds[part] += [{ 'part' => part, 'location' => Regexp.last_match(2), 'type' => Regexp.last_match(1), 'level' => @wound_map[Regexp.last_match(3)] }] if line =~ /(\w+) (\w+):.*\-\- (.*)\r/
    end
    waitrt?
    wounds
  end

end
