# quiet
=begin
  Documentation: https://elanthipedia.play.net/mediawiki/index.php/Lich_script_development#common-arcana
=end

custom_require.call(%w(common common-travel))

module DRCA
  module_function

  def infuse_om(harness, amount)
    return unless amount

    success = ['having reached its full capacity', 'a sense of fullness']
    failure = ['as if it hungers for more', 'Your infusion fails completely']

    loop do
      DRC.bput("harness #{amount}", 'You tap into') if harness
      pause 0.5
      waitrt?
      break if success.include?(DRC.bput("infuse om #{amount}", success + failure))
      pause 0.5
      waitrt?
    end
  end

  def activate_khri?(kneel, preps, ability)
    return false if DRSpells.active_spells[ability]
    DRCT.retreat if kneel
    DRC.bput('kneel', 'You kneel', 'You are already', 'You rise') if kneel && !checkkneeling
    result = DRC.bput(ability, preps)
    waitrt?
    DRC.fix_standing

    ['Your body is willing', 'You have not recovered'].include?(result)
  end

  def buff(spell, settings)
    DRC.bput("pre #{spell['abbrev']} #{spell['mana']}", settings.prep_messages)
    if spell['cambrinth']
      find_cambrinth(settings)

      charge_and_invoke(settings, spell['cambrinth'])

      stow_cambrinth(settings)
    end
    waitcastrt?
    DRC.bput('cast', settings.cast_messages)
  end

  def find_cambrinth(settings)
    if settings.held_cambrinth
      fput("remove my #{settings.cambrinth}")
    elsif settings.stored_cambrinth
      fput("get my #{settings.cambrinth}")
    end
  end

  def find_cambrinth3(cambrinth, held_cambrinth)
    DRC.bput("remove my #{cambrinth}", '^You') if held_cambrinth
  end

  def stow_cambrinth(settings)
    if settings.held_cambrinth
      fput("stow my #{settings.cambrinth}")
    elsif settings.stored_cambrinth
      fput("wear my #{settings.cambrinth}")
    end
  end

  def stow_cambrinth2(settings)
    if settings.held_cambrinth && DRSkill.getrank('Arcana').to_i >= settings.cambrinth_cap * 2 + 100
      command = settings.stored_cambrinth ? 'stow' : 'wear'
      fput "#{command} my #{settings.cambrinth}"
    end
  end

  def stow_cambrinth3(settings)
    if settings.held_cambrinth && DRSkill.getrank('Arcana').to_i < settings.cambrinth_cap * 2 + 100
      command = settings.stored_cambrinth ? 'stow' : 'wear'
      fput "#{command} my #{settings.cambrinth}"
    end
  end

  def stow_cambrinth4(cambrinth, held_cambrinth)
    DRC.bput("wear my #{cambrinth}", '^You') if held_cambrinth
  end

  def charge_and_invoke(settings, cambrinth)
    cambrinth.each do |mana|
      charge(settings.cambrinth, mana, settings.charge_messages)
    end

    invoke(settings.cambrinth, settings.invoke_messages)
  end

  def invoke(cambrinth, invoke_messages)
    DRC.bput("invoke my #{cambrinth}", invoke_messages)
    pause 0.5
    waitrt?
  end

  def charge(cambrinth, mana, charge_messages)
    DRC.bput("charge my #{cambrinth} #{mana}", charge_messages)
    pause 0.5
    waitrt?
  end
end
