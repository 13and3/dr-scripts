# quiet
=begin
  Documentation: https://elanthipedia.play.net/mediawiki/index.php/Lich_script_development#common-arcana
=end

custom_require.call(%w(common common-travel))

module DRCA
  module_function

  def infuse_om(harness, amount)
    return unless amount

    success = ['having reached its full capacity', 'a sense of fullness']
    failure = ['as if it hungers for more', 'Your infusion fails completely']

    loop do
      DRC.bput("harness #{amount}", 'You tap into') if harness
      pause 0.5
      waitrt?
      break if success.include?(DRC.bput("infuse om #{amount}", success + failure))
      pause 0.5
      waitrt?
    end
  end

  def activate_khri?(kneel, preps, ability)
    return false if DRSpells.active_spells[ability]
    DRCT.retreat if kneel
    DRC.bput('kneel', 'You kneel', 'You are already', 'You rise') if kneel && !checkkneeling
    result = DRC.bput(ability, preps)
    waitrt?
    DRC.fix_standing

    ['Your body is willing', 'You have not recovered'].include?(result)
  end

  def buff(spell, settings)
    DRC.bput("pre #{spell['abbrev']} #{spell['mana']}", settings.prep_messages)
    if spell['cambrinth']
      if settings.held_cambrinth
        fput("remove my #{settings.cambrinth}")
      elsif settings.stored_cambrinth
        fput("get my #{settings.cambrinth}")
      end

      charge_and_invoke(settings, spell['cambrinth'])

      if settings.held_cambrinth || settings.stored_cambrinth
        command = settings.stored_cambrinth ? 'stow' : 'wear'
        fput "#{command} my #{settings.cambrinth}"
      end
    end
    waitcastrt?
    DRC.bput('cast', settings.cast_messages)
  end

  def charge_and_invoke(settings, cambrinth)
    cambrinth.each do |mana|
      case DRC.bput("charge my #{settings.cambrinth} #{mana}", settings.charge_messages)
      when "You'll have to hold it"
        DRC.bput("get my #{settings.cambrinth}", 'You get', 'What were you referring to')
      end
      waitrt?
    end

    DRC.bput("invoke my #{settings.cambrinth}", settings.invoke_messages)
    pause
    waitrt?
  end
end
