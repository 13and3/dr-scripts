=begin
    Authored by Sheltim. Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

    This script sell gems (from your pouch), sells your worn bundle, and then deposits your money. It is intended to be used in The Crossing (https://elanthipedia.play.net/mediawiki/index.php/RanikMap1).

    Before running this script for the first time:
    * Download scripts "common" and "drinfomon".
    * You can turn on debug mode with ;e UserVars.sell_loot_debug = true

    Optional arguments are a number and a coin type keep on hand. The default is 3 silver: the maximum amount that cannot be stolen by a Thief.
    * ;sell-loot # Uses the default: keeps 3 silver
    * ;sell-loot 12 # Uses one argument: keeps 12 silver, which is converted to 1 gold and 2 silver
    * ;sell-loot 4 gold # Uses two arguments: keeps 4 gold
=end

def main
  keep_amount, keep_type = setup(variable)

  start_room = Room.current.id
  echo "Starting room: #{start_room}" if UserVars.sell_loot_debug

  sell_gems('pouch')

  sell_bundle

  withdrawals = convert_input(keep_amount, keep_type)
  deposit_coins(withdrawals)

  echo "Returning to start room: #{start_room}" if UserVars.sell_loot_debug
  DRC.walk_to start_room
end

def setup(variable)
  keep_amount = variable[1] || 3
  keep_type = variable[2] || 'silver'

  # Run helper scripts
  %w(common drinfomon).each do |script_name|
    unless running?(script_name)
      start_script script_name
      pause 0.5
    end
  end

  DRC.empty_hands

  [keep_amount, keep_type]
end

def convert_input(keep_amount, keep_type)
  copper = convert2copper(keep_amount, keep_type)
  plats = convert2plats(copper)
  plats.split(',').collect(&:strip)
end

def deposit_coins(withdrawals)
  DRC.walk_to 1902
  fput 'exchange all lir for kro'
  fput 'exchange all dok for kro'

  DRC.walk_to 1900
  fput 'deposit all'
  withdrawals.each { |amount| fput "withdraw #{amount}" }
  fput 'check balance'
end

def sell_bundle
  skins = DRC.get_skins('bundle')

  if skins.count == 1
    echo 'Skipping selling bundle' if UserVars.sell_loot_debug
    return
  end

  DRC.walk_to 8266

  skin = skins.first
  fput "get my #{skin} from bundle"
  # Do not stow
  fput "drop my #{skin}"
  fput 'remove my bundle'
  fput 'sell my bundle'
  fput "get #{skin}"
  fput "bundle my #{skin}"
  fput 'wear my bundle'
end

def sell_gems(container)
  fput "open my #{container}"
  gems = DRC.get_gems("#{container}")

  if gems.count < 1
    echo 'Skipping selling gems' if UserVars.sell_loot_debug
  else
    DRC.walk_to 4652

    gems.each do |gem|
      fput "get my #{gem}"
      fput "sell my #{gem} to appraiser"
    end
  end

  fput "close my #{container}"
end

# Call this last to avoid the need for forward declarations
main
