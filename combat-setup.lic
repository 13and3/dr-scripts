=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts
=end

custom_require(%w(combat-trainer common))

class CombatTrainerSetup
  include DRC

  def main(args:[])
    should_debug = args.delete('debug')
    should_app = args.delete('app')
    darg = args.find { |arg| arg =~ /d\d+/ }
    args.delete(darg) if darg
    rarg = args.find { |arg| arg =~ /r\d+/ }
    args.delete(rarg) if rarg

    CombatVars.set(get_settings(args))

    debug if should_debug
    set_dance(darg) if darg
    set_retreat(rarg) if rarg
    app if should_app

    $COMBAT_TRAINER = CombatTrainer.new
    $COMBAT_TRAINER.main(CombatVars)
  end

  def app
    CombatVars.training_abilities['App'] = { check: 'Appraisal', cooldown: 60 }
  end

  def set_dance(message)
    message =~ /d(\d+)/
    CombatVars.dance_threshold = Regexp.last_match(1).to_i
  end

  def set_retreat(message)
    message =~ /r(\d+)/
    CombatVars.retreat_threshold = Regexp.last_match(1).to_i
  end

  def debug
    CombatVars.combat_trainer_debug = true
  end

  module CombatVars
    @@vars = {}
    def self.[](name)
      @@vars[name]
    end

    def self.set(val)
      @@vars = val
    end

    def self.reset
      @@vars = {}
    end

    def self.[]=(name, val)
      if val.nil?
        @@vars.delete(name)
      else
        @@vars[name] = val
      end
    end

    def self.list
      @@vars.dup
    end

    def self.method_missing(arg1, arg2 = '')
      if arg1[-1, 1] == '='
        if arg2.nil?
          @@vars.delete(arg1.to_s.chop)
        else
          @@vars[arg1.to_s.chop] = arg2
        end
      else
        @@vars[arg1.to_s]
      end
    end
  end
end

CombatTrainerSetup.new.main(args: variable.drop(1))
