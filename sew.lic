
custom_require(%w(common))

class Sew
  include DRC

  def initialize(args:[])
    settings = get_settings
    @bag = settings.crafting_container('backpack')
    @finish, @type, @chapter, @page, @noun = args

    case @type
    when /knit/
      knit
    else
      echo('Sew does not yet support that form of tailoring.')
    end
  end

  def get_or_fail(item)
    waitrt?
    case bput("get my #{item}", '^You get', '^You are already', '^What do you', '^What were you')
    when 'What do you', 'What were you'
      echo("You seem to be missing: #{item}")
      exit
    end
  end

  def store_thing(item)
    waitrt?
    bput("put my #{item} in my #{@bag}", 'You put your', 'What were you referring to')
  end

  def turn_to(section)
    bput("turn my book to #{section}", 'You turn your', 'The book is already')
  end

  def knit
    get_or_fail('tailoring book')
    turn_to("chapter #{@chapter}")
    turn_to("page #{@page}")
    bput('study my book', 'Roundtime')
    store_thing('book')
    get_or_fail('knitting needle')
    get_or_fail('wool yarn')
    do_knit('knit my yarn with my needles')
  end

  def do_knit(command)
    waitrt?
    next_command = 'knit my needles'
    case bput(command,
              'Now the needles must be turned', 'Some ribbing should be added',
              'Next the needles must be pushed', 'ready to be pushed',
              'The garment is nearly complete and now must be cast off',
              'Roundtime'
             )
    when 'Now the needles must be turned', 'Some ribbing should be added'
      next_command = 'turn my needles'
    when 'Next the needles must be pushed', 'ready to be pushed'
      next_command = 'push my needles'
    when 'The garment is nearly complete and now must be cast off'
      cast_and_finish
    end
    waitrt?
    fput('stow my yarn') if checkleft =~ /yarn/i
    do_knit(next_command)
  end

  def cast_and_finish
    bput('cast my needles', 'roundtime')
    waitrt?
    fput('stow my needles')
    case @finish
    when /log/
      logbook_item
    when /stow/
      store_thing(@noun)
    when /trash/
      dispose_trash(@noun)
    end
    exit
  end

  def logbook_item
    get_or_fail('outfitting logbook')
    bput("bundle my #{@noun} with my logbook", 'You notate the', 'This work order has expired') # need the failure case for low quality.
    store_thing('outfitting logbook')
  end
end

Sew.new(args: variable.drop(1))
