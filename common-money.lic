# quiet
=begin
  Documentation: https://elanthipedia.play.net/mediawiki/index.php/Lich_script_development#common-money
=end

custom_require.call(%w(common common-travel))

module DRCM
  def minimize_coins(copper)
    coins = copper.to_s.reverse
    coins = coins.scan(/(?:\d*\.)?\d{1,4}-?/) # if it has plats move them to their own index
    coins[1] = coins[1].reverse + ' platinum' if coins[1]
    coins[0] = coins[0].scan(/\d/)
    coins[0][3] = coins[0][3] + ' gold' if coins[0][3]
    coins[0][2] = coins[0][2] + ' silver' if coins[0][2]
    coins[0][1] = coins[0][1] + ' bronze' if coins[0][1]
    coins[0][0] = coins[0][0] + ' copper'

    coins[0].reject! { |x| x =~ /0/ }
    coins[0].reverse!
    coins[0].flatten!
    coins.reverse
         .flatten
  end
  module_function :minimize_coins

  def convert_to_copper(amount, denomination)
    return (amount.to_i * 10_000) if 'platinum' =~ /^#{denomination}/
    return (amount.to_i * 1000) if 'gold' =~ /^#{denomination}/
    return (amount.to_i * 100) if 'silver' =~ /^#{denomination}/
    return (amount.to_i * 10) if 'bronze' =~ /^#{denomination}/
    amount
  end
  module_function :convert_to_copper

  def wealth
    fput 'wealth'
    waitfor('Wealth:')
    wealth = matchfind '\\(? copper Kronars\\)\\.', 'No Kronars?'
    wealth == '.' ? 0 : wealth.to_i
  end
  module_function :wealth

  def ensure_copper_on_hand(copper)
    return true if wealth >= copper
    DRCT.walk_to 1900
    withdrawals = minimize_coins(copper)
    withdrawals.each { |amount| return false if 'The clerk tells' == DRC.bput("withdraw #{amount}", 'The clerk count', 'The clerk tells') }
    true
  end
  module_function :ensure_copper_on_hand
end
