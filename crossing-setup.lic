=begin
    Before running crossing-training.lic for the first time, you MUST add a method for each of your characters which sets the following UserVars (change the values to match your needs):
        UserVars.crossing_training = [
            "Appraisal",
            "Athletics",
            "First Aid",
            "Mechanical Lore",
            "Outdoorsmanship",
            "Perception",
        ]

    Your new method MAY also need to override any UserVars set in baseline_setup.
    * Be sure not to change baseline_setup itself, as this is common to all characters.
    * See below for some example methods for various guilds.
    * Be aware of the difference in overwriting something that was set in baseline_setup vs updating it.
        * This will insert a new key or replace the key if it exists in a hash: UserVars.exp_timers["Theurgy"] = { ... }
        * This will overwrite a hash: UserVars.exp_timers = {"Theurgy" => { ... } }
        * This will append to an array: UserVars.armor << "..."
        * This will overwrite an array: UserVars.armor = [ ... ]
=end

def main
  baseline_setup

  case checkname
  when 'Etreu' # Ranger
    etreu
  when 'Menacra' # Cleric
    menacra
  when 'Selanas' # Empath
    selanas
  when 'Sheltim' # Barbarian
    sheltim
  when 'Torgro' # Warrior Mage
    torgro
  when 'Sarikis' # Moon Mage
    sarikis
  else
    echo "***DON'T USE THE BASELINE PROFILE***"
    echo 'Open and edit crossing-setup.lic'
  end
end

def baseline_setup
  UserVars.exp_timers = {
    'Stealth' => { 'cooldown' => 60 * 5, 'timer' => Time.now },
    'First Aid' => { 'cooldown' => 60 * 6, 'timer' => Time.now },
    'Locksmithing' => { 'cooldown' => 60 * 10, 'timer' => nil }
  }

  UserVars.held_cambrinth = false
  # Worn chargable cambrinth
  UserVars.cambrinth = 'armband'

  # Whether or not spells should be used for supernatural/magic skills
  UserVars.train_with_spells = true

  UserVars.training_spells = {}
  UserVars.training_nonspells = {}

  # This is a room in which it is safe to train skills that do not require movement.
  # Good rooms are 851 (just outside the Ranger's Guild) and 992 (the NE Gate).
  UserVars.safe_room = 851

  UserVars.hand_armor = 'gloves'

  # Use https://elanthipedia.play.net/mediawiki/index.php/Perform to find the most difficult
  # song which still gives the "with only the slightest hint of difficulty" message
  UserVars.song = 'hymn'

  # Whether or not the script will exit when all skills are mindlocked
  UserVars.exit_on_skills_capped = true
end

def etreu
  UserVars.crossing_training = [
    'First Aid',
    'Appraisal',
    'Scouting',
    'Athletics',
    'Augmentation',
    'Attunement',
    'Utility',
    'Mechanical Lore',
    'Outdoorsmanship',
    'Warding',
    'Locksmithing'
  ]

  UserVars.armor = %w(gloves shield mask mantle greaves vambraces cap tasset)

  UserVars.training_spells['Warding'] = { 'abbrev' => 'EY', 'mana' => 5, 'symbiosis' => true }
  UserVars.training_spells['Augmentation'] = { 'abbrev' => 'ATH', 'mana' => 1, 'cambrinth' => [1], 'symbiosis' => true }
  UserVars.training_spells['Utility'] = { 'abbrev' => 'blend', 'mana' => 12, 'cambrinth' => [10, 10], 'after' => proc { fput('release blend') } }

  UserVars.song = 'polka'
end

def menacra
  UserVars.crossing_training = [
    'First Aid',
    'Appraisal',
    'Athletics',
    'Augmentation',
    'Attunement',
    'Utility',
    'Mechanical Lore',
    'Outdoorsmanship',
    'Warding',
    'Theurgy',
    'Perception'
  ]

  UserVars.exp_timers['Theurgy'] = { 'cooldown' => 60 * 12, 'timer' => nil }

  UserVars.armor = %w(gloves shield mask mantle greaves vambraces cap tasset)

  UserVars.training_spells['Warding'] = { 'abbrev' => 'MPP', 'mana' => 9, 'cambrinth' => [8, 8, 8, 6] }
  UserVars.training_spells['Augmentation'] = { 'abbrev' => 'MAPP', 'mana' => 8, 'cambrinth' => [6, 6, 6, 6, 5] }
  UserVars.training_spells['Utility'] = { 'abbrev' => 'BLESS', 'mana' => 3, 'cambrinth' => [1], 'symbiosis' => true }

  UserVars.song = 'lament'
end

def selanas
  UserVars.crossing_training = [
    'Empathy',
    'First Aid',
    'Appraisal',
    'Athletics',
    'Augmentation',
    'Attunement',
    'Utility',
    'Mechanical Lore',
    'Outdoorsmanship',
    'Warding',
    'Scholarship',
    'Perception'
  ]

  UserVars.armor = ['gloves']

  UserVars.training_spells['Warding'] = { 'abbrev' => 'IC', 'mana' => 5, 'cambrinth' => [10, 10, 5] }
  UserVars.training_spells['Augmentation'] = { 'abbrev' => 'GOL', 'mana' => 5, 'cambrinth' => [10, 10, 6] }
  UserVars.training_spells['Utility'] = { 'abbrev' => 'Heal', 'mana' => 15, 'cambrinth' => [8, 8] }

  UserVars.held_cambrinth = false
  UserVars.song = 'hymn'
end

def sarikis
  UserVars.crossing_training = [
    'Astrology',
    'First Aid',
    'Appraisal',
    'Athletics',
    'Augmentation',
    'Attunement',
    'Utility',
    'Mechanical Lore',
    'Outdoorsmanship',
    'Warding',
    'Perception',
    'Scholarship',
    'Locksmithing',
    # 'Forging',
  ]

  UserVars.song = 'ditty'

  UserVars.held_cambrinth = true

  UserVars.safe_room = 793

  UserVars.exp_timers['Astrology'] = { 'cooldown' => 60 * 3, 'timer' => nil }
  UserVars.exp_timers['Attunement'] = { 'cooldown' => 65 * 2, 'timer' => nil }

  UserVars.training_spells['Augmentation'] = { 'abbrev' => 'cv', 'mana' => 5, 'cambrinth' => [5, 5, 5] }
  UserVars.training_spells['Warding'] = { 'abbrev' => 'psy', 'mana' => 5, 'cambrinth' => [6, 6] }
  UserVars.training_spells['Utility'] = { 'abbrev' => 'locate', 'mana' => 16, 'cambrinth' => [1, 1], 'cast' => 'cast sarikis' }

  UserVars.exit_on_skills_capped = false
end

def sheltim
  UserVars.crossing_training = [
    # 'Stealth',
    'First Aid',
    'Appraisal',
    # 'Athletics',
    'Mechanical Lore',
    'Outdoorsmanship',
    'Perception',
    'Debilitation',
    'Warding',
    'Augmentation',
    'Locksmithing',
    # 'Forging'
  ]

  UserVars.exp_timers['Augmentation'] = { 'cooldown' => 60 * 1, 'timer' => nil }
  UserVars.exp_timers['Debilitation'] = { 'cooldown' => 60 * 1, 'timer' => nil }
  UserVars.exp_timers['Warding'] = { 'cooldown' => 60 * 5, 'timer' => nil }

  UserVars.train_with_spells = false
  UserVars.training_nonspells['Augmentation'] = 'berserk avalanche'
  UserVars.training_nonspells['Debilitation'] = 'berserk earthquake'
  UserVars.training_nonspells['Warding'] = 'form badger'

  UserVars.song = 'jig'

  UserVars.exit_on_skills_capped = false
  UserVars.crossing_trainer_debug = true
end

def sheltim
  UserVars.crossing_training = [
    # 'Stealth',
    # 'First Aid',
    # 'Appraisal',
    'Athletics',
    'Mechanical Lore',
    'Outdoorsmanship',
    'Perception',
    # 'Debilitation',
    # 'Warding',
    # 'Augmentation',
    # 'Locksmithing',
    # 'Forging',
    # 'Summoning',
    'Attunement',
  ]
  
  UserVars.exp_timers['Attunement'] = { 'cooldown' => 65 * 2, 'timer' => nil }

  UserVars.song = 'jig'
  
  UserVars.safe_room = 984

  UserVars.exit_on_skills_capped = false
end

main
